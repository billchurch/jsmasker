!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define([],t):"object"==typeof exports?exports.JSMasker=t():e.JSMasker=t()}(this,(()=>(()=>{"use strict";var e={d:(t,o)=>{for(var n in o)e.o(o,n)&&!e.o(t,n)&&Object.defineProperty(t,n,{enumerable:!0,get:o[n]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t),r:e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}},t={};function o(e){function t(e){return"string"!=typeof e?e:e.toLowerCase().replace(/[^a-z0-9]/g,"")}return e&&e.applyPolyfills&&e.applyPolyfills(),function(e,o={},n=new WeakMap){const{properties:r=["password","key","secret","token","privatekey","passphrase"],propertyMatcher:f=null,maskLength:l=8,minLength:s=5,maxLength:i=15,maskChar:a="*",fullMask:p=!1}=o;if(n.has(e))return n.get(e);const u=r.map(t);function y(e,o,n=[]){const r=t(e);return f&&"function"==typeof f?f(e,r,o,n):-1!==u.indexOf(r)}function d(e,t,o=[]){if(null==e)return e;if("object"==typeof e&&n.has(e))return n.get(e);let r;if(Array.isArray(e)){r=[],n.set(e,r);for(let n=0;n<e.length;n+=1){const f=[...o,n];r[n]=d(e[n],t,f)}}else if("object"==typeof e){r={},n.set(e,r);const f=Object.keys(e);for(let n=0;n<f.length;n+=1){const l=f[n],s=[...o,l],i=t||y(l,e[l],s);r[l]=d(e[l],i,s)}}else r=t&&"string"==typeof e?(f=e,"string"==typeof p?p:!0===p?a.repeat(f.length):function(e,t,o,n="*"){let r=e;return"random"===r&&(r=Math.floor(Math.random()*(o-t+1))+t),n.repeat(r)}(l,s,i,a)):e;var f;return r}let c;if(Array.isArray(e)){c=[],n.set(e,c);for(let t=0;t<e.length;t+=1)c[t]=d(e[t],!1,[t])}else if(e&&"object"==typeof e){c={},n.set(e,c);const t=Object.keys(e);for(let o=0;o<t.length;o+=1){const n=t[o],r=y(n,e[n],[n]);c[n]=d(e[n],r,[n])}}else c=e;return c}}e.r(t),e.d(t,{default:()=>n}),function(e){const t="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:{};"function"==typeof define&&define.amd?define(["./polyfills"],e):"object"==typeof module&&module.exports?module.exports=e(require("./polyfills")):t.JSMasker=e(t)}(o);const n=o("undefined"!=typeof window?window:null);return t})()));